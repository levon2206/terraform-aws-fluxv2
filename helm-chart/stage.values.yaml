# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: <<AWS-Accaunt-ID>>.dkr.ecr.<<AWS-Region>>.amazonaws.com/simple-app
  repository: simple-app
  tag: latest
  pullPolicy: IfNotPresent

app: {}
  # command: []
  # args: []

imagePullSecrets: []
  #  - name: regcred

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
# securityContext:
#   capabilities:
#     drop:
#       - ALL
#   readOnlyRootFilesystem: true
#   runAsNonRoot: true
#   runAsUser: 1000

#extraResources: []
  # - apiVersion: v1
  #   kind: Service
  #   metadata:
  #     name:  app-0.1.0
  #     labels:
  #       helm.sh/chart: app-0.1.0
  #       app.kubernetes.io/name: app
  #   spec:
  #     type: ClusterIP
  #     ports:
  #     - name: http
  #       port: 8000
  #       targetPort: http
  #       protocol: TCP
  #     selector:
  #       app.kubernetes.io/name: app

service:
  enabled: true
  type: ClusterIP
  healthPath: /health
  healthPort: 8080
  port:
    name: http
    number: 8080
    protocol: TCP

metrics:
  enabled: false
  service:
    # NOTE: The same as a healthcheck port
    # Experimentally added METRICS_PORT variable.
    # It means that there is no dependency between HEALTH_PORT and METRICS_PORT
    port: 7777
    protocol: TCP
    name: metrics

  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    enabled: false
    ## Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)
    ##
    namespace: monitoring

    ## Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    interval: 20s
    ## Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    scrapeTimeout: 10s

    path: /metrics

    ## ServiceMonitor selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ##
    labels: {}
      # release: prometheus-operator

ingress:
  enabled: false
  ingressClassName: nginx
  domains:
    - domain:
        host: "example.com"
        paths:
          - pathType: Prefix
            path: /
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: "10m"
    memory: "10Mi"
  limits:
    cpu: "100m"
    memory: "50Mi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}
#   kubernetes.io/os: linux
#   kubernetes.io/arch: amd64

tolerations: []

affinity: {}

initContainers: []
  # - name: check-db-ready
  #   image: postgres:9.6.5
  #   command: ['sh', '-c', 
  #     'until pg_isready -h postgres -p 5432; 
  #     do echo waiting for database; sleep 2; done;']
